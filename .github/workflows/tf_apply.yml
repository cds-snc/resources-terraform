name: Terraform Apply
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
    paths:
      - "terragrunt/**"
      - ".github/workflows/**"
      
env:
  TERRAFORM_VERSION: 1.0.7
  TERRAGRUNT_VERSION: v0.31.1
  CONFTEST_VERSION: 0.27.0
  TF_VAR_contentful_cda_access_token: ${{ secrets.CONTENTFUL_CDA_ACCESS_TOKEN }}
  TF_VAR_gh_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
  TF_VAR_google_analytics_id: ${{ secrets.GOOGLE_ANALYTICS_ID }}
  TF_VAR_google_tag_manager_id: ${{ secrets.GOOGLE_TAG_MANAGER_ID }}
  TF_VAR_sentry_dsn: ${{ secrets.SENTRY_DSN }}
  TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
  TF_VAR_fr_domain_name: ${{ secrets.FR_DOMAIN_NAME }}


permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-apply:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform Tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Set INFRASTRUCTURE_VERSION
        run: |
          INFRASTRUCTURE_VERSION=`cat ./.github/workflows/infrastructure_version.txt`
          echo "INFRASTRUCTURE_VERSION=$INFRASTRUCTURE_VERSION" >> $GITHUB_ENV

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::236007890657:role/resources-terraform-apply
          aws-region: 'ca-central-1'

      - name: Terragrunt apply staging ${{ matrix.module }}
        working-directory: infrastructure/terragrunt/env/staging/${{ matrix.module }}
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
